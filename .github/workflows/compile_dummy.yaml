name: Dummy compilation

on:
  workflow_dispatch:
  repository_dispatch:
    types: rebuild
jobs:
  list_cores:
    runs-on: ubuntu-latest
    outputs:
      cores: ${{ steps.generate-matrix.outputs.cores }}
      artifact_name: ${{ steps.generate-matrix.outputs.artifact_name }}
    steps:
    - uses: actions/checkout@v3
    - id: generate-matrix
      name: Get core names
      run: |
        cd cores
        # Get list of cores ready for compilation
        CORES='['
        for i in *; do
          if [[ -e $i/cfg/macros.def && ! -e $i/cfg/skip ]]; then
            if [ "$CORES" != '[' ]; then CORES="$CORES, "; fi
            CORES="$CORES \"$i\""
          fi
        done
        CORES="$CORES ]"
        echo $CORES
        echo "cores=${CORES}" >> $GITHUB_OUTPUT

  dummy_files:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    needs:
      - list_cores
    strategy:
      fail-fast: false
      matrix:
        core: ${{ fromJSON(needs.list_cores.outputs.cores) }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          token: ${{ secrets.PAT }}
      - id: compile
        name: Create dummy file
        run: |
          mkdir release
          echo "All good" > release/${{matrix.core}}
      - id: upload
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: release
          retention-days: 1

  upload:
    runs-on: ubuntu-latest
    needs: [ dummy_files ]
    steps:
      - uses: actions/checkout@v3
      - name: Download all artifacts
        uses: actions/download-artifact@v2
      - name: Set zip file name
        run: |
          echo ARTIFACT_NAME=dummy_`git rev-parse --short HEAD`.zip >> "$GITHUB_ENV"
          echo COMMIT_DATE=$(git show -s --format=%ci 2> /dev/null) >> "$GITHUB_ENV"
      - name: Make zip file
        run: |
          ls -l release/*
          echo ARTIFACT_NAME=$ARTIFACT_NAME
          zip -r $ARTIFACT_NAME release
          touch -m -d "$COMMIT_DATE" "$ARTIFACT_NAME"
          ls -l $ARTIFACT_NAME
      - name: Upload bundle
        uses: bayssmekanique/action-simple-file-upload@v2
        with:
          user: ${{ secrets.FTPUSER }}
          password: ${{ secrets.FTPPASS }}
          host: jotego.es
          src: ${{ env.ARTIFACT_NAME }}
          dest: ${{ env.ARTIFACT_NAME }}
      # - name: Synology Uploader
      #   uses: leconio/synology-uploader-action@v1.0.4
      #   with:
      #     host: ${{secrets.NAS_HOST}}
      #     sharing_id: ${{secrets.NAS_SHAREID}}
      #     uploader_name: ${{secrets.NAS_NAME}}
      #     # password: ${{secrets.NAS_PASSWD}}
      #     file: ${{ env.ARTIFACT_NAME }}